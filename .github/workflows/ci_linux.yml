# SPDX-FileCopyrightText: 2006-2024 Knut Reinert & Freie Universität Berlin
# SPDX-FileCopyrightText: 2016-2024 Knut Reinert & MPI für molekulare Genetik
# SPDX-License-Identifier: CC0-1.0

name: Unit Linux

on:
  push:
    branches:
      - 'master'
  pull_request:
  workflow_dispatch:

concurrency:
  group: linux-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: ${{ github.event_name != 'push' }}

env:
  TZ: Europe/Berlin

defaults:
  run:
    shell: bash -Eeuxo pipefail {0}

jobs:
  build:
    name: ${{ matrix.compiler }}/SIMD-${{ matrix.SIMD-ISA }}
    runs-on: ubuntu-22.04
    timeout-minutes: 120
    strategy:
      fail-fast: false
      matrix:
        compiler: ["gcc-11", "gcc-12", "gcc-13"]
        SIMD-ISA: ["native"]
        include:
          - compiler: "gcc-13"
            SIMD-ISA: "none"
          - compiler: "gcc-13"
            SIMD-ISA: "SSE4"
          - compiler: "gcc-13"
            SIMD-ISA: "AVX2"
          - compiler: "gcc-13"
            SIMD-ISA: "AVX512BW"
          - compiler: "gcc-13"
            SIMD-ISA: "AVX512VBMI"
    container:
      image: ghcr.io/seqan/${{ matrix.compiler }}
      volumes:
        - /home/runner:/home/runner
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: "recursive"

      - name: Load ccache
        uses: actions/cache@v4
        with:
          path: /home/runner/.ccache
          save-always: true
          key: ccache-${{ runner.os }}-${{ github.workflow }}-${{ matrix.compiler }}-${{ github.ref }}-${{ github.run_id }}
          restore-keys: |
            ccache-${{ runner.os }}-${{ github.workflow }}-${{ matrix.compiler }}-${{ github.ref }}
            ccache-${{ runner.os }}-${{ github.workflow }}-${{ matrix.compiler }}

      - name: Configure
        run: |
          mkdir build
          cd build
          cmake ../test/unit -DCMAKE_BUILD_TYPE=RelWithDebInfo \
                             -DPAIRWISE_ALIGNER_SIMD_ISA=${{ matrix.SIMD-ISA }} \

      - name: Build tests
        working-directory: build
        run: |
          ccache -z
          make -k -j
          ccache -sv

      - name: Run tests
        working-directory: build
        run: ctest . -j --output-on-failure
